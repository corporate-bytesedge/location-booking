<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd">

	<!-- Configurer that replaces ${...} placeholders with values from a properties 
		file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition 
		below) -->
	<context:annotation-config />
	<context:component-scan base-package="com.bytesedge.bookvenue" />

	<!-- JNDI DataSource for JEE environments -->
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/webApp" />

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="connection.autoReconnect">true</prop>
				<prop key="connection.autoReconnectForPools">true</prop>
				<prop key="connection.is-connection-validation-required">true</prop>
				<prop key="hibernate.listeners.envers.autoRegister">false</prop>
				<prop key="hibernate.integration.envers.enabled">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.bytesedge.bookvenue.model</value>
			</list>
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" scope="singleton">
		<property name='sessionFactory' ref='sessionFactory' />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>WEB-INF/messages</value>
				<value>WEB-INF/messages_te</value>
				<value>WEB-INF/messages_kn</value>
			</list>
		</property>
	</bean>

	<bean id="msgHelper" class="com.bytesedge.bookvenue.common.MessageHelper">
		<property name="messageSource" ref="messageSource" />
	</bean>

	<bean id="serviceFactoryBean" class="com.bytesedge.bookvenue.common.DbService" factory-method="getInstance">
	</bean>

</beans>